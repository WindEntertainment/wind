name: Build engine
description: Build engine
# riznia
runs:
  using: 'composite'
  steps:
    - name: Setup conan base
      uses: ./.github/workflows/utils/setup-conan

    - name: Install dependencies
      uses: ./.github/workflows/modules/engine/install-dependencies

    - name: Setup ultralight base
      uses: ./.github/workflows/utils/setup-ultralight

    - name: Prepare engine env
      uses: ./.github/workflows/modules/engine/setup-env

    - uses: actions/cache/restore@v4
      with:
        path: ${{ env.projectRoot }}/dreich/game/.cache
        key: ${{ runner.os }}-assets-manager

    - name: Build assets
      run:   |
        if [ "$RUNNER_OS" == "Linux" ]; then
          export CC=clang
          export CXX=clang++

          cmake -DCMAKE_MAKE_PROGRAM=/usr/bin/make -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=$(pwd)/build/Debug/generators/conan_toolchain.cmake -S$(pwd) -B$(pwd)/build/Debug
          cmake --build $(pwd)/build/Debug --parallel 10 --target wind-asset-bundler
        elif [ "$RUNNER_OS" == "macOS" ]; then
          cmake -DCMAKE_MAKE_PROGRAM=/usr/bin/make -G "Unix Makefiles" -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE=$(pwd)/build/Debug/generators/conan_toolchain.cmake -S$(pwd) -B$(pwd)/build/Debug
          cmake --build $(pwd)/build/Debug --parallel 10 --target wind-asset-bundler
        elif [ "$RUNNER_OS" == "Windows" ]; then
          export CC=clang
          export CXX=clang++

          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE="D:\a\dreich\dreich\build\Debug\generators\conan_toolchain.cmake" -S "D:\a\dreich\dreich" -B "D:\a\dreich\dreich\build\Debug"
          cmake --build "D:\a\dreich\dreich\build\Debug" --parallel 10 --target wind-asset-bundler
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi

        cd build/Debug/wind/asset-pipeline
        sudo make install
        wind-asset-bundler -h
        cd ../../../../game/assets
        wind-asset-bundler --build ../.cache/
      shell: bash

    - uses: actions/cache/save@v4
      with:
        path: ${{ env.projectRoot }}/dreich/game/.cache
        key: ${{ runner.os }}-assets-manager

    - name: Build game
      run:   |
        if [ "$RUNNER_OS" == "Linux" ]; then
          export CC=clang
          export CXX=clang++

          cmake --build $(pwd)/build/Debug --parallel 10 --target game
        elif [ "$RUNNER_OS" == "macOS" ]; then
          /opt/homebrew/bin/cmake --build $(pwd)/build/Debug --parallel 10 --target game
        elif [ "$RUNNER_OS" == "Windows" ]; then
          export CC=clang
          export CXX=clang++

          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TOOLCHAIN_FILE="D:\a\dreich\dreich\build\Debug\generators\conan_toolchain.cmake" -S "D:\a\dreich\dreich" -B "D:\a\dreich\dreich\build\Debug"
          cmake --build "D:\a\dreich\dreich\build\Debug" --parallel 10 --target game
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
      shell: bash
