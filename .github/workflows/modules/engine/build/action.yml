name: Build engine
description: Build engine

runs:
  using: "composite"
  steps:
    - name: Setup conan base
      uses: ./.github/workflows/utils/setup-conan

    - name: Setup ultralight base
      uses: ./.github/workflows/utils/setup-ultralight

    - name: Prepare engine env
      uses: ./.github/workflows/modules/engine/setup-env

    - name: Install dependencies
      uses: ./.github/workflows/modules/engine/install-dependencies

    - uses: actions/cache/restore@v4
      with:
        path: ${{ env.projectRoot }}/dreich/game/data/.cache
        key: ${{ env.envHash }}-${{ hashFiles('${{ env.projectRoot }}/dreich/game/data/**/.export-config') }}-${{ env.os }}-asset-manager

    - name: Build game with wm
      shell: bash
      run: |
        export CC=${{ env.cc }}
        export CXX=${{ env.cxx }}

        wm run cmake-build -t game -bt ${{ env.engineBuildType }}
        wm run cpack-build -bt ${{ env.engineBuildType }}

        cd releases
        7z x -y $(pwd)/dreich.zip -o$(pwd)
        ls -a

    - name: Upload package as artifact
      # wrong if condition
      if: ${{ env.isRelease == 'false' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.artifact }}
        path: ${{ env.projectRoot }}/dreich/releases/dreich
        retention-days: 1
        overwrite: true

    - uses: actions/cache/save@v4
      with:
        path: ${{ env.projectRoot }}/dreich/game/data/.cache
        key: ${{ env.envHash }}-${{ hashFiles('${{ env.projectRoot }}/dreich/game/data/**/.export-config') }}-${{ env.os }}-asset-manager

    # - name: Upload package as artifact
    #   if: ${{ env.isRelease == true }}
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: ${{ env.envHash }}
    #     path: build/${{ env.engineBuildType }}
    #     retention-days: 1
    #     overwrite: true
