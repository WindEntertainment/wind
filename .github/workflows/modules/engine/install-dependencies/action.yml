name: Install engine dependencies
description: Install engine dependencies

inputs:
  buildSettings:
    description: Conan settings
    default: build_type=Debug

runs:
  using: 'composite'
  steps:
    - name: Install conan
      id: conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 2.1.0

    - name: Create default profile
      shell: bash
      run: conan profile detect

    - name: Install Linux staff
      run:   |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt install libxcb-util-dev libgl-dev libgl1-mesa-dev libx11-xcb-dev libfontenc-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxres-dev libxss-dev libxtst-dev libxv-dev libxxf86vm-dev libxcb-glx0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-cursor-dev libxcb-dri2-0-dev libxcb-dri3-dev libxcb-present-dev libxcb-composite0-dev libxcb-ewmh-dev libxcb-res0-dev
        fi
      shell: bash

    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ~/.conan2/p/
        key: ${{ runner.os }}-conan-store-${{ hashFiles('~/.conan2/p/**') }}
        restore-keys: |
          ${{ runner.os }}-conan-store-

    - name: Install dependencies
      shell: bash
      run: conan install . --update -s build_type=Debug --build=missing -c tools.system.package_manager:mode=install

    - name: Install Linux staff
      run:   |
        which conan
      shell: bash


    - name: Install Linux staff
      run:   |
        if [ "$RUNNER_OS" == "Windows" ]; then
          ls -a %USERPROFILE%\.conan2\p
        else
          # ls -a ~/.conan2/p
          ls -a
        fi
      shell: bash
