name: Setup env
description: Setup env

runs:
  using: 'composite'
  steps:
    - name: Add env file
      run:   |
        touch CMakeEnv.txt

        if [ "$RUNNER_OS" == "Linux" ]; then
          echo 'set(ENV{ULTRALIGHT_PATH} ${{ env.ULTRALIGHT_PATH }})' >> CMakeEnv.txt
          echo 'set(ENV{DOTNET_ROOT} ${{ env.DOTNET_PATH }})' >> CMakeEnv.txt
          echo 'set(ENV{DOTNET_INCLUDES} "${{ env.DOTNET_PATH }}/packs/Microsoft.NETCore.App.Host.linux-x64/8.0.3/runtimes/linux-x64/native")' >> CMakeEnv.txt
        elif [ "$RUNNER_OS" == "macOS" ]; then
          echo 'set(ENV{ULTRALIGHT_PATH} "${{ env.ULTRALIGHT_PATH }}")' >> CMakeEnv.txt
          echo 'set(ENV{DOTNET_ROOT} "${{ env.DOTNET_PATH }}")' >> CMakeEnv.txt
          echo 'set(ENV{DOTNET_INCLUDES} "${{ env.DOTNET_PATH }}/packs/Microsoft.NETCore.App.Host.osx-arm64/8.0.3/runtimes/osx-arm64/native")' >> CMakeEnv.txt
        elif [ "$RUNNER_OS" == "Windows" ]; then
          echo 'set(ENV{ULTRALIGHT_PATH} "${{ env.ULTRALIGHT_PATH }}")' >> CMakeEnv.txt
          echo 'set(ENV{DOTNET_ROOT} "${{ env.DOTNET_PATH }}")' >> CMakeEnv.txt
          echo 'set(ENV{DOTNET_INCLUDES} "${{ env.DOTNET_PATH }}\\packs\\Microsoft.NETCore.App.Host.win-x64\\7.0.3\\runtimes\\win-x64\\native")' >> CMakeEnv.txt
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
      shell: bash

# C:\\Program\ Files\\dotnet
# C:\\Program\ Files\\dotnet

# D:\\a\\dreich\\ultralight\\ultralight\\SDK
