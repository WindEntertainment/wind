name: Build assets
description: Build assets
# riznia
runs:
  using: 'composite'
  steps:
    - name: Build assets bundler
      run:   |
        if [ "$RUNNER_OS" == "Linux" ]; then
          export CC=clang
          export CXX=clang++
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${{ env.engineBuildType }} -DCMAKE_TOOLCHAIN_FILE=${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }}/generators/conan_toolchain.cmake -S${{ env.projectRoot }}/dreich -B${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }}
        elif [ "$RUNNER_OS" == "macOS" ]; then
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${{ env.engineBuildType }} -DCMAKE_TOOLCHAIN_FILE=${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }}/generators/conan_toolchain.cmake -S${{ env.projectRoot }}/dreich -B${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }}
        elif [ "$RUNNER_OS" == "Windows" ]; then
          export CC=clang
          export CXX=clang++
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${{ env.engineBuildType }} -DCMAKE_TOOLCHAIN_FILE=${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }}/generators/conan_toolchain.cmake -S${{ env.projectRoot }}/dreich -B${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }}
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi

        cmake --build ${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }} --parallel 10 --target wind-asset-bundler

        cd build/${{ env.engineBuildType }}/wind/asset-pipeline

        if [ "$RUNNER_OS" == "Windows" ]; then
          mkdir ${{ env.projectRoot }}/apps
          make install DESTDIR=${{ env.projectRoot }}/apps
          echo "${{ env.projectRoot }}/apps/usr/local/bin" >> $GITHUB_PATH
        else
          make install
        fi

        # "D:/a/dreich/apps/usr/local/bin/wind-asset-bundler.exe" -h
        # cd "C:/"
        # mkdir -p "C:\usr\local\bin"
        # ls -a
        # which wind-asset-bundler
        # ls -a "/usr/local/bin"
        # cd "C:/"
        # echo "C:\usr\local\bin" >> $GITHUB_PATH
        # installed_path=$(find /c/ -name "wind-asset-bundler.exe")
        # dir c: d: /s | findstr /i wind-asset-bundler.exe
        # echo "Installed path: $installed_path"
      shell: bash

    # - name: Build assets bundler
    #   shell: powershell
    #   run:   |
    #     dir c: d: /s | findstr /i wind-asset-bundler.exe

    - uses: actions/cache/restore@v4
      with:
        path: ${{ env.projectRoot }}/dreich/game/data
        key: ${{ runner.os }}-assets-manager

    - name: Build assets
      run:   |
        # setx /M path "%path%;C:\usr\local\bin"
        # echo "C:\usr\local\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

        ls -a /d/a/dreich/ultralight/ultralight/SDK/includes

        cd game/data

        wind-asset-bundler -b main
        cd ../
        rm -rf .cache
        cd data
        wind-asset-bundler -b resources
        cd ../
        rm -rf .cache
        cd data
      shell: bash

    - uses: actions/cache/save@v4
      with:
        path: ${{ env.projectRoot }}/dreich/game/data
        key: ${{ runner.os }}-assets-manager
