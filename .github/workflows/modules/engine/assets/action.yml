name: Build assets
description: Build assets

runs:
  using: 'composite'
  steps:
    - name: Build asset bundler
      run:   |
        if [ "$RUNNER_OS" == "Linux" ]; then
          export CC=${{ env.cc }}
          export CXX=${{ env.cxx }}
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${{ env.engineBuildType }} -DCMAKE_TOOLCHAIN_FILE=${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }}/generators/conan_toolchain.cmake -S${{ env.projectRoot }}/dreich -B${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }}
        elif [ "$RUNNER_OS" == "macOS" ]; then
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${{ env.engineBuildType }} -DCMAKE_TOOLCHAIN_FILE=${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }}/generators/conan_toolchain.cmake -S${{ env.projectRoot }}/dreich -B${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }}
        elif [ "$RUNNER_OS" == "Windows" ]; then
          cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=${{ env.engineBuildType }} -DCMAKE_TOOLCHAIN_FILE=${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }}/generators/conan_toolchain.cmake -S${{ env.projectRoot }}/dreich -B${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }}
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi

        cmake --build ${{ env.projectRoot }}/dreich/build/${{ env.engineBuildType }} --parallel 10 --target wind-asset-bundler

        cd build/${{ env.engineBuildType }}/wind/asset-pipeline

        if [ "$RUNNER_OS" == "Windows" ]; then
          mkdir -p ${{ env.projectRoot }}/apps
          make install DESTDIR=${{ env.projectRoot }}/apps
          echo "${{ env.projectRoot }}/apps/usr/local/bin" >> $GITHUB_PATH
        else
          make install
        fi
      shell: bash

    - uses: actions/cache/restore@v4
      with:
        path: ${{ env.projectRoot }}/dreich/game/data/.cache
        key: ${{ env.envHash }}-${{ hashFiles('${{ env.projectRoot }}/dreich/game/data/**/.export-config') }}-${{ env.os }}-asset-manager

    - name: Build assets
      run:   |
        cd game/data

        rm -rf .cache
        wind-asset-bundler -b main
        rm -rf .cache
        wind-asset-bundler -b resources
        rm -rf .cache
      shell: bash

    - uses: actions/cache/save@v4
      with:
        path: ${{ env.projectRoot }}/dreich/game/data/.cache
        key: ${{ env.envHash }}-${{ hashFiles('${{ env.projectRoot }}/dreich/game/data/**/.export-config') }}-${{ env.os }}-asset-manager
