name: Setup ultralight
description: Setup ultralight

runs:
  using: 'composite'
  steps:

    - uses: actions/cache@v4
      if: env.os == 'ubuntu-latest'
      with:
        key: ${{ runner.os }}-apt-store-${{ hashFiles('ci-requirments.linux.txt') }}
        path: /var/cache/apt/archives

    - name: Install ultralight
      if: env.os == 'ubuntu-latest'
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends $(< ci-requirments.linux.txt)

          which clang
          which cmake
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi

    # - name: Check if cache exists
    #   if: env.os == 'macos-14'
    #   id: cache-check
    #   uses: actions/cache@v4
    #   with:
    #     path: |
    #       /opt/homebrew/bin
    #     key: ${{ runner.os }}-brew

    # - name: Restore cache
    #   if: env.os == 'macos-14' && steps.cache-check.outputs.cache-hit == 'true'
    #   uses: actions/cache@v4
    #   with:
    #     path: |
    #       /opt/homebrew/bin
    #     key: ${{ runner.os }}-brew
    #     restore-keys: |
    #       ${{ runner.os }}-brew

    # - uses: actions/cache@v4
    #   if: env.os == 'macos-14'
    #   with:
    #     key: ${{ runner.os }}-brew-store
    #     path: |
    #       /opt/homebrew

    - name: Install packages with Homebrew
      if: env.os == 'macos-14' && steps.cache-check.outputs.cache-hit != 'true'
      shell: bash
      run: |
          brew install p7zip
          brew install llvm
          brew install cmake
          brew install conan
          which cmake

    # - name: Save cache
    #   if: env.os == 'macos-14'
    #   uses: actions/cache@v4
    #   with:
    #     path: |
    #       /opt/homebrew/bin
    #     key: ${{ runner.os }}-brew

    # - uses: actions/cache@v4
    #   if: env.os == 'windows-latest'
    #   with:
    #     key: ${{ runner.os }}-choco-store
    #     path: |
    #       C:\ProgramData

    - name: Install ultralight
      if: env.os == 'windows-latest'
      shell: powershell
      run: |
        choco install make
        choco install cmake
        choco install llvm
        choco install 7zip
