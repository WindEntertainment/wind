name: Setup ultralight
description: Setup ultralight

runs:
  using: 'composite'
  steps:
    - name: Install ultralight
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          echo "ULTRALIGHT_PATH=/Users/runner/work/dreich/ultralight" >> $GITHUB_ENV
        elif [ "$RUNNER_OS" == "Windows" ]; then
          echo "ULTRALIGHT_PATH=C:\\\a\\\dreich\\\ultralight" >> $GITHUB_ENV
        elif [ "$RUNNER_OS" == "macOS" ]; then
          echo "ULTRALIGHT_PATH=/Users/runner/work/dreich/ultralight/SDK" >> $GITHUB_ENV
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi

    - name: Check if cache exists
      id: cache-check
      uses: actions/cache@v4
      with:
        lookup-only: true
        path: |
          ${{ env.ULTRALIGHT_PATH }}
        key: ${{ runner.os }}-ultralight

    - name: Restore cache
      if: steps.cache-check.outputs.cache-hit == 'true'
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.ULTRALIGHT_PATH }}
        key: ${{ runner.os }}-ultralight
        restore-keys: |
          ${{ runner.os }}-ultralight

    - name: Install ultralight
      shell: bash
      if: steps.cache-check.outputs.cache-hit != 'true' && env.os != 'windows-latest'
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          cd ../
          mkdir ultralight
          cd ultralight

          wget https://ultralight-files.sfo3.cdn.digitaloceanspaces.com/ultralight-sdk-1.3.0-linux-x64.7z
          7za x ultralight-sdk-1.3.0-linux-x64.7z
        elif [ "$RUNNER_OS" == "macOS" ]; then
          cd ../
          mkdir ultralight
          cd ultralight

          wget https://ultralight-files.sfo3.cdn.digitaloceanspaces.com/ultralight-sdk-1.4.0a-mac-arm64.7z
          7za x ultralight-sdk-1.4.0a-mac-arm64.7z

          echo -e "#include <Ultralight/String.h>\n$(cat SDK/include/Ultralight/ConsoleMessage.h )" > SDK/include/Ultralight/ConsoleMessage.h
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi

    - name: Install ultralight
      if: steps.cache-check.outputs.cache-hit != 'true' && env.os == 'windows-latest'
      shell: powershell
      run: |
        cd ../
        New-Item -ItemType Directory -Path ultralight
        cd ultralight

        Invoke-WebRequest -Uri https://ultralight-files.sfo3.cdn.digitaloceanspaces.com/ultralight-sdk-1.4.0a-win-x64.7z -OutFile ultralight-sdk.7z
        7z x ultralight-sdk.7z -o"ultralight"

    - name: Save cache
      if: steps.cache-check.outputs.cache-hit != 'true'
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.ULTRALIGHT_PATH }}
        key: ${{ runner.os }}-ultralight
